from telegram import Bot, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.constants import ParseMode

from model.models import Slot


class Notifier:
    def __init__(self, bot: Bot, chat_id: int):
        self.chat_id = chat_id
        self.tg_bot = bot

    async def notify_wait_auth(self, authorization_link: str):
        msg = f"""
            *–í–∞–∂–ª–∏–≤–æ:* ‚ö† –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å —É –Ω–∞–π–±–ª–∏–∂—á–∏–π —á–∞—Å (5-10 —Ö–≤–∏–ª–∏–Ω)! –ë—É–¥—å-–ª–∞—Å–∫–∞, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –ø—Ä–æ—Ü–µ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        """

        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[InlineKeyboardButton(text='–ê–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å', url=authorization_link)]]
            )
        )

    async def notify_auth_success(self):
        msg = f"""
            *–û–Ω–æ–≤–ª–µ–Ω–Ω—è:* ‚úÖ –í–∞—Å –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ –¥–æ —Å–∞–π—Ç—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó —á–µ—Ä–≥–∏ –ú–í–° –£–∫—Ä–∞—ó–Ω–∏!
        """
        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN
        )

    async def notify_reservation_start(self, slot: Slot):
        msg = f"""
            *–û–Ω–æ–≤–ª–µ–Ω–Ω—è:* üìÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–ª–æ–Ω –Ω–∞ –¥–∞—Ç—É *{slot.ch_date} {slot.ch_time}*. –ó–∞–ø—É—Å—Ç–∏–≤ –ø—Ä–æ—Ü–µ—Å —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è —á–∞—Å—É...
        """
        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN
        )

    async def notify_reservation_failed(self):
        msg = f"""
            *–û–Ω–æ–≤–ª–µ–Ω–Ω—è:* üö® –ù–∞–∂–∞–ª—å –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è —á–∞—Å—É. –°—Ö–æ–∂–µ, —â–æ —Ç–∞–ª–æ–Ω –≤–∂–µ –±—É–≤ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–∏–π...
        """
        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN
        )

    async def notify_reservation_approved(self, slot: Slot):
        msg = f"""
            *–û–Ω–æ–≤–ª–µ–Ω–Ω—è:* üìÖ –¢–∞–ª–æ–Ω –Ω–∞ –∑–¥–∞—á—É –ø—Ä–∞–∫—Ç–∏—á–Ω–æ–≥–æ —ñ—Å–ø–∏—Ç—É (–º–µ—Ö–∞–Ω—ñ—á–Ω–∞ –∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á—ñ) –Ω–∞ –º–∞—à–∏–Ω—ñ —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É –ú–í–° —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –Ω–∞ –¥–∞—Ç—É *{slot.ch_date} {slot.ch_time}*. –©–∞—Å—Ç–∏ –Ω–∞ —ñ—Å–ø–∏—Ç—ñ!
        """

        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN,
        )

    async def notify_with_pdf(self, file, filename):
        await self.tg_bot.send_document(
            chat_id=self.chat_id,
            caption="üéâ üéâ üéâ –í—ñ—Ç–∞—é! –î–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –≤–∏—Å–ª–∞–≤ —Ç–∞–ª–æ–Ω PDF —Ñ–∞–π–ª–æ–º! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∑—É–ø–∏–Ω–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞...",
            document=file,
            filename=filename
        )

    async def notify_error(self, error: Exception):
        msg = f"""
            *–û–Ω–æ–≤–ª–µ–Ω–Ω—è:* üö® –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞! –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: `{str(error)}`
        """

        await self.tg_bot.send_message(
            chat_id=self.chat_id,
            text=msg,
            parse_mode=ParseMode.MARKDOWN
        )
